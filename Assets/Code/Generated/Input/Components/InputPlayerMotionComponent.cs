//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.GamePlay.Components.PlayerMotion playerMotion { get { return (Code.GamePlay.Components.PlayerMotion)GetComponent(InputComponentsLookup.PlayerMotion); } }
    public bool hasPlayerMotion { get { return HasComponent(InputComponentsLookup.PlayerMotion); } }

    public void AddPlayerMotion(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PlayerMotion;
        var component = (Code.GamePlay.Components.PlayerMotion)CreateComponent(index, typeof(Code.GamePlay.Components.PlayerMotion));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerMotion(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PlayerMotion;
        var component = (Code.GamePlay.Components.PlayerMotion)CreateComponent(index, typeof(Code.GamePlay.Components.PlayerMotion));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerMotion() {
        RemoveComponent(InputComponentsLookup.PlayerMotion);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPlayerMotion;

    public static Entitas.IMatcher<InputEntity> PlayerMotion {
        get {
            if (_matcherPlayerMotion == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PlayerMotion);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPlayerMotion = matcher;
            }

            return _matcherPlayerMotion;
        }
    }
}
