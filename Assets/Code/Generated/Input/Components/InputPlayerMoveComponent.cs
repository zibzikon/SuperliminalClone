//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.GamePlay.Components.PlayerMove playerMove { get { return (Code.GamePlay.Components.PlayerMove)GetComponent(InputComponentsLookup.PlayerMove); } }
    public bool hasPlayerMove { get { return HasComponent(InputComponentsLookup.PlayerMove); } }

    public void AddPlayerMove(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PlayerMove;
        var component = (Code.GamePlay.Components.PlayerMove)CreateComponent(index, typeof(Code.GamePlay.Components.PlayerMove));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerMove(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.PlayerMove;
        var component = (Code.GamePlay.Components.PlayerMove)CreateComponent(index, typeof(Code.GamePlay.Components.PlayerMove));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerMove() {
        RemoveComponent(InputComponentsLookup.PlayerMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPlayerMove;

    public static Entitas.IMatcher<InputEntity> PlayerMove {
        get {
            if (_matcherPlayerMove == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PlayerMove);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPlayerMove = matcher;
            }

            return _matcherPlayerMove;
        }
    }
}
