//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractedListenerComponent interactedListener { get { return (InteractedListenerComponent)GetComponent(GameComponentsLookup.InteractedListener); } }
    public bool hasInteractedListener { get { return HasComponent(GameComponentsLookup.InteractedListener); } }

    public void AddInteractedListener(System.Collections.Generic.List<IInteractedListener> newValue) {
        var index = GameComponentsLookup.InteractedListener;
        var component = (InteractedListenerComponent)CreateComponent(index, typeof(InteractedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInteractedListener(System.Collections.Generic.List<IInteractedListener> newValue) {
        var index = GameComponentsLookup.InteractedListener;
        var component = (InteractedListenerComponent)CreateComponent(index, typeof(InteractedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractedListener() {
        RemoveComponent(GameComponentsLookup.InteractedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractedListener;

    public static Entitas.IMatcher<GameEntity> InteractedListener {
        get {
            if (_matcherInteractedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractedListener = matcher;
            }

            return _matcherInteractedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddInteractedListener(IInteractedListener value) {
        var listeners = hasInteractedListener
            ? interactedListener.value
            : new System.Collections.Generic.List<IInteractedListener>();
        listeners.Add(value);
        ReplaceInteractedListener(listeners);
    }

    public void RemoveInteractedListener(IInteractedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = interactedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveInteractedListener();
        } else {
            ReplaceInteractedListener(listeners);
        }
    }
}
