//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public KinematicListenerComponent kinematicListener { get { return (KinematicListenerComponent)GetComponent(GameComponentsLookup.KinematicListener); } }
    public bool hasKinematicListener { get { return HasComponent(GameComponentsLookup.KinematicListener); } }

    public void AddKinematicListener(System.Collections.Generic.List<IKinematicListener> newValue) {
        var index = GameComponentsLookup.KinematicListener;
        var component = (KinematicListenerComponent)CreateComponent(index, typeof(KinematicListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceKinematicListener(System.Collections.Generic.List<IKinematicListener> newValue) {
        var index = GameComponentsLookup.KinematicListener;
        var component = (KinematicListenerComponent)CreateComponent(index, typeof(KinematicListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveKinematicListener() {
        RemoveComponent(GameComponentsLookup.KinematicListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKinematicListener;

    public static Entitas.IMatcher<GameEntity> KinematicListener {
        get {
            if (_matcherKinematicListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.KinematicListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKinematicListener = matcher;
            }

            return _matcherKinematicListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddKinematicListener(IKinematicListener value) {
        var listeners = hasKinematicListener
            ? kinematicListener.value
            : new System.Collections.Generic.List<IKinematicListener>();
        listeners.Add(value);
        ReplaceKinematicListener(listeners);
    }

    public void RemoveKinematicListener(IKinematicListener value, bool removeComponentWhenEmpty = true) {
        var listeners = kinematicListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveKinematicListener();
        } else {
            ReplaceKinematicListener(listeners);
        }
    }
}
