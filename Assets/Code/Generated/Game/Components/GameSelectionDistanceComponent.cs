//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.GamePlay.Components.SelectionDistance selectionDistance { get { return (Code.GamePlay.Components.SelectionDistance)GetComponent(GameComponentsLookup.SelectionDistance); } }
    public bool hasSelectionDistance { get { return HasComponent(GameComponentsLookup.SelectionDistance); } }

    public void AddSelectionDistance(float newValue) {
        var index = GameComponentsLookup.SelectionDistance;
        var component = (Code.GamePlay.Components.SelectionDistance)CreateComponent(index, typeof(Code.GamePlay.Components.SelectionDistance));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSelectionDistance(float newValue) {
        var index = GameComponentsLookup.SelectionDistance;
        var component = (Code.GamePlay.Components.SelectionDistance)CreateComponent(index, typeof(Code.GamePlay.Components.SelectionDistance));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSelectionDistance() {
        RemoveComponent(GameComponentsLookup.SelectionDistance);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSelectionDistance;

    public static Entitas.IMatcher<GameEntity> SelectionDistance {
        get {
            if (_matcherSelectionDistance == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SelectionDistance);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSelectionDistance = matcher;
            }

            return _matcherSelectionDistance;
        }
    }
}
