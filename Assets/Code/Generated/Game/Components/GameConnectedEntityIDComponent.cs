//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Code.GamePlay.Components;

public partial class GameEntity {

    public ConnectedEntityID connectedEntityID { get { return (ConnectedEntityID)GetComponent(GameComponentsLookup.ConnectedEntityID); } }
    public bool hasConnectedEntityID { get { return HasComponent(GameComponentsLookup.ConnectedEntityID); } }

    public void AddConnectedEntityID(int newValue) {
        var index = GameComponentsLookup.ConnectedEntityID;
        var component = (ConnectedEntityID)CreateComponent(index, typeof(ConnectedEntityID));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceConnectedEntityID(int newValue) {
        var index = GameComponentsLookup.ConnectedEntityID;
        var component = (ConnectedEntityID)CreateComponent(index, typeof(ConnectedEntityID));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveConnectedEntityID() {
        RemoveComponent(GameComponentsLookup.ConnectedEntityID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConnectedEntityID;

    public static Entitas.IMatcher<GameEntity> ConnectedEntityID {
        get {
            if (_matcherConnectedEntityID == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ConnectedEntityID);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConnectedEntityID = matcher;
            }

            return _matcherConnectedEntityID;
        }
    }
}
